{"ast":null,"code":"var _jsxFileName = \"/home/robin/Documents/Github/roundnet-france-ranking/src/components/Ranking/index.js\";\nimport React from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Ranking() {\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 70\n  }, {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 130\n  }, {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 130\n  }, {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 90\n  }, {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: params => `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''}`\n  }];\n  const rows = [{\n    id: 1,\n    lastName: 'Snow',\n    firstName: 'Jon',\n    age: 35\n  }, {\n    id: 2,\n    lastName: 'Lannister',\n    firstName: 'Cersei',\n    age: 42\n  }, {\n    id: 3,\n    lastName: 'Lannister',\n    firstName: 'Jaime',\n    age: 45\n  }, {\n    id: 4,\n    lastName: 'Stark',\n    firstName: 'Arya',\n    age: 16\n  }, {\n    id: 5,\n    lastName: 'Targaryen',\n    firstName: 'Daenerys',\n    age: null\n  }, {\n    id: 6,\n    lastName: 'Melisandre',\n    firstName: null,\n    age: 150\n  }, {\n    id: 7,\n    lastName: 'Clifford',\n    firstName: 'Ferrara',\n    age: 44\n  }, {\n    id: 8,\n    lastName: 'Frances',\n    firstName: 'Rossini',\n    age: 36\n  }, {\n    id: 9,\n    lastName: 'Roxie',\n    firstName: 'Harvey',\n    age: 65\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    id: \"ranking\",\n    maxWidth: \"lg\",\n    sx: {\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      color: \"primary\",\n      m: 8,\n      children: \"Le classement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Ranking;\nexport default Ranking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ranking\");","map":{"version":3,"sources":["/home/robin/Documents/Github/roundnet-france-ranking/src/components/Ranking/index.js"],"names":["React","Container","Typography","DataGrid","Ranking","columns","field","headerName","width","type","description","sortable","valueGetter","params","getValue","id","rows","lastName","firstName","age","position"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nimport { DataGrid } from '@mui/x-data-grid';\n\nfunction Ranking() {\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'firstName', headerName: 'First name', width: 130 },\n    { field: 'lastName', headerName: 'Last name', width: 130 },\n    {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) => `${params.getValue(params.id, 'firstName') || ''} ${\n        params.getValue(params.id, 'lastName') || ''\n      }`,\n    },\n  ];\n\n  const rows = [\n    {\n      id: 1, lastName: 'Snow', firstName: 'Jon', age: 35,\n    },\n    {\n      id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42,\n    },\n    {\n      id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45,\n    },\n    {\n      id: 4, lastName: 'Stark', firstName: 'Arya', age: 16,\n    },\n    {\n      id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null,\n    },\n    {\n      id: 6, lastName: 'Melisandre', firstName: null, age: 150,\n    },\n    {\n      id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44,\n    },\n    {\n      id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36,\n    },\n    {\n      id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65,\n    },\n  ];\n\n  return (\n    <Container id=\"ranking\" maxWidth=\"lg\" sx={{ position: 'relative' }}>\n      <Typography\n        variant=\"h4\"\n        align=\"center\"\n        color=\"primary\"\n        m={8}\n      >\n        Le classement\n      </Typography>\n\n    </Container>\n  );\n}\n\nexport default Ranking;\n"]},"metadata":{},"sourceType":"module"}