{"ast":null,"code":"var _jsxFileName = \"/home/robin/Documents/Github/roundnet-france-ranking/src/components/Ranking/index.js\";\nimport React from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Ranking() {\n  const columns = [{\n    field: 'rank',\n    headerName: 'Rang',\n    width: 70\n  }, {\n    field: 'player',\n    headerName: 'Joueur',\n    width: 130\n  }, {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 130\n  }, {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 90\n  }, {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: params => `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''}`\n  }];\n  const rows = [{\n    rank: 1,\n    player: 'Louis Jouve',\n    points: 35\n  }, {\n    rank: 2,\n    player: 'Thomas Jouve',\n    firspoints: 42\n  }, {\n    rank: 3,\n    player: 'Lannister',\n    firpoints: 45\n  }, {\n    rank: 4,\n    player: 'Stark',\n    fipoints: 16\n  }, {\n    rank: 5,\n    player: 'Targaryen',\n    firstNpoints: null\n  }, {\n    rank: 6,\n    player: 'Melisandre',\n    points: 150\n  }, {\n    rank: 7,\n    player: 'Clifford',\n    firstpoints: 44\n  }, {\n    rank: 8,\n    player: 'Frances',\n    firstpoints: 36\n  }, {\n    rank: 9,\n    player: 'Roxie',\n    firspoints: 65\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    id: \"ranking\",\n    maxWidth: \"lg\",\n    sx: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      color: \"primary\",\n      m: 8,\n      children: \"Le classement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 300,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Ranking;\nexport default Ranking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ranking\");","map":{"version":3,"sources":["/home/robin/Documents/Github/roundnet-france-ranking/src/components/Ranking/index.js"],"names":["React","Container","Typography","DataGrid","Ranking","columns","field","headerName","width","type","description","sortable","valueGetter","params","getValue","id","rows","rank","player","points","firspoints","firpoints","fipoints","firstNpoints","firstpoints","position","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,UAAU,EAAE,MAA7B;AAAqCC,IAAAA,KAAK,EAAE;AAA5C,GADc,EAEd;AAAEF,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,UAAU,EAAE,QAA/B;AAAyCC,IAAAA,KAAK,EAAE;AAAhD,GAFc,EAGd;AAAEF,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,UAAU,EAAE,WAAjC;AAA8CC,IAAAA,KAAK,EAAE;AAArD,GAHc,EAId;AACEF,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,UAAU,EAAE,KAFd;AAGEE,IAAAA,IAAI,EAAE,QAHR;AAIED,IAAAA,KAAK,EAAE;AAJT,GAJc,EAUd;AACEF,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,UAAU,EAAE,WAFd;AAGEG,IAAAA,WAAW,EAAE,qDAHf;AAIEC,IAAAA,QAAQ,EAAE,KAJZ;AAKEH,IAAAA,KAAK,EAAE,GALT;AAMEI,IAAAA,WAAW,EAAGC,MAAD,IAAa,GAAEA,MAAM,CAACC,QAAP,CAAgBD,MAAM,CAACE,EAAvB,EAA2B,WAA3B,KAA2C,EAAG,IACxEF,MAAM,CAACC,QAAP,CAAgBD,MAAM,CAACE,EAAvB,EAA2B,UAA3B,KAA0C,EAC3C;AARH,GAVc,CAAhB;AAsBA,QAAMC,IAAI,GAAG,CACX;AACEC,IAAAA,IAAI,EAAE,CADR;AACWC,IAAAA,MAAM,EAAE,aADnB;AACkCC,IAAAA,MAAM,EAAE;AAD1C,GADW,EAIX;AACEF,IAAAA,IAAI,EAAE,CADR;AACWC,IAAAA,MAAM,EAAE,cADnB;AACmCE,IAAAA,UAAU,EAAE;AAD/C,GAJW,EAOX;AACEH,IAAAA,IAAI,EAAE,CADR;AACWC,IAAAA,MAAM,EAAE,WADnB;AACgCG,IAAAA,SAAS,EAAE;AAD3C,GAPW,EAUX;AACEJ,IAAAA,IAAI,EAAE,CADR;AACWC,IAAAA,MAAM,EAAE,OADnB;AAC4BI,IAAAA,QAAQ,EAAE;AADtC,GAVW,EAaX;AACEL,IAAAA,IAAI,EAAE,CADR;AACWC,IAAAA,MAAM,EAAE,WADnB;AACgCK,IAAAA,YAAY,EAAE;AAD9C,GAbW,EAgBX;AACEN,IAAAA,IAAI,EAAE,CADR;AACWC,IAAAA,MAAM,EAAE,YADnB;AACiCC,IAAAA,MAAM,EAAE;AADzC,GAhBW,EAmBX;AACEF,IAAAA,IAAI,EAAE,CADR;AACWC,IAAAA,MAAM,EAAE,UADnB;AAC+BM,IAAAA,WAAW,EAAE;AAD5C,GAnBW,EAsBX;AACEP,IAAAA,IAAI,EAAE,CADR;AACWC,IAAAA,MAAM,EAAE,SADnB;AAC8BM,IAAAA,WAAW,EAAE;AAD3C,GAtBW,EAyBX;AACEP,IAAAA,IAAI,EAAE,CADR;AACWC,IAAAA,MAAM,EAAE,OADnB;AAC4BE,IAAAA,UAAU,EAAE;AADxC,GAzBW,CAAb;AA8BA,sBACE,QAAC,SAAD;AAAW,IAAA,EAAE,EAAC,SAAd;AAAwB,IAAA,QAAQ,EAAC,IAAjC;AAAsC,IAAA,EAAE,EAAE;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KAA1C;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,CAAC,EAAE,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,GAAV;AAAelB,QAAAA,KAAK,EAAE;AAAtB,OAAZ;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEQ,IAAhB;AAAsB,QAAA,OAAO,EAAEX;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;KApEQD,O;AAsET,eAAeA,OAAf","sourcesContent":["import React from 'react';\n\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nimport { DataGrid } from '@mui/x-data-grid';\n\nfunction Ranking() {\n  const columns = [\n    { field: 'rank', headerName: 'Rang', width: 70 },\n    { field: 'player', headerName: 'Joueur', width: 130 },\n    { field: 'lastName', headerName: 'Last name', width: 130 },\n    {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) => `${params.getValue(params.id, 'firstName') || ''} ${\n        params.getValue(params.id, 'lastName') || ''\n      }`,\n    },\n  ];\n\n  const rows = [\n    {\n      rank: 1, player: 'Louis Jouve', points: 35,\n    },\n    {\n      rank: 2, player: 'Thomas Jouve', firspoints: 42,\n    },\n    {\n      rank: 3, player: 'Lannister', firpoints: 45,\n    },\n    {\n      rank: 4, player: 'Stark', fipoints: 16,\n    },\n    {\n      rank: 5, player: 'Targaryen', firstNpoints: null,\n    },\n    {\n      rank: 6, player: 'Melisandre', points: 150,\n    },\n    {\n      rank: 7, player: 'Clifford', firstpoints: 44,\n    },\n    {\n      rank: 8, player: 'Frances', firstpoints: 36,\n    },\n    {\n      rank: 9, player: 'Roxie', firspoints: 65,\n    },\n  ];\n\n  return (\n    <Container id=\"ranking\" maxWidth=\"lg\" sx={{ position: 'relative' }}>\n      <Typography\n        variant=\"h4\"\n        align=\"center\"\n        color=\"primary\"\n        m={8}\n      >\n        Le classement\n      </Typography>\n      <div style={{ height: 300, width: '100%' }}>\n        <DataGrid rows={rows} columns={columns} />\n      </div>\n    </Container>\n  );\n}\n\nexport default Ranking;\n"]},"metadata":{},"sourceType":"module"}